{"mappings":"MAAA,MAAMA,EAAQ,CACVC,KAASC,GACE,IAAKC,KAAKD,EAAQE,WAAYC,cAEzCC,KAASJ,IACL,MAAMK,EAAOL,EAAQE,UAAUI,MAAM,KACrC,OAAOD,EAAKA,EAAKE,OAAS,EAAE,EAEhCC,aAAiBR,IACb,MAAMQ,EAAeC,OAAOD,aACtBE,EAAUC,SAASC,cAAc,QAEvC,IAAIC,GAAY,EAWhB,GAVAC,OAAOC,KAAKP,GAAcQ,SAAQC,IAC9BJ,GAAY,EAEZ,MAAMK,EAAWD,EAAO,OAClBE,EAAOX,EAAaS,GAE1BP,EAAQU,OAAOC,EAAmBH,EAAUD,EAAME,EADrC,oBAEbT,EAAQU,OAAOT,SAASW,eAAe,KAAK,KAG3CT,EAAW,MAAO,SAEvB,MAAMU,EAAQZ,SAASC,cAAc,SAIrC,OAHAW,EAAMH,OAAOT,SAASW,eAAe,wBACrCZ,EAAQU,OAAOG,GAERb,CAAO,GAIhBW,EAAqB,CAACH,EAAUM,EAAOC,EAASC,KAClD,MAAMC,EAAO,IAAIC,KACb,CAACH,GACD,CACIC,KAAMA,GAAQ,eAIhBG,EAAOlB,SAASC,cAAc,KAMpC,OALAiB,EAAKC,OAAS,SACdD,EAAKE,SAAWb,EAChBW,EAAKG,KAAOC,IAAIC,gBAAgBP,GAChCE,EAAKT,OAAOT,SAASW,eAAeE,IAE7BK,CAAI,EAGff,OAAOC,KAAKjB,GAAOkB,SAAQmB,IACvB,MAAMC,EAAItC,EAAMqC,GACCxB,SAAS0B,iBAAiB,QAAUF,GAC5CnB,SAAQhB,IACb,MAAMsC,EAAaF,EAAEpC,GACrB,GAA0B,iBAAfsC,EAGP,OAFAtC,EAAQuC,UAAY,QACpBvC,EAAQwC,YAAY7B,SAASW,eAAegB,IAIhDtC,EAAQyC,WAAWC,aAAaJ,EAAYtC,EAAQ,GACtD,G","sources":["src/control/control.js"],"sourcesContent":["const types = {\n    \"date\": (element) => {\n        return (new Date(element.innerText)).toISOString()\n    },\n    \"path\": (element) => {\n        const text = element.innerText.split(\"/\");\n        return text[text.length - 1];\n    },\n    \"pathbuilders\": (element) => {\n        const pathbuilders = window.pathbuilders; // read from context!\n        const wrapper = document.createElement(\"span\");\n\n        let found_one = false\n        Object.keys(pathbuilders).forEach(name => {\n            found_one = true\n\n            const filename = name + \".xml\"\n            const data = pathbuilders[name]\n            const mime = \"application/xml\"\n            wrapper.append(make_download_link(filename, name, data, mime))\n            wrapper.append(document.createTextNode(\" \"))\n        })\n\n        if (!found_one) return '(none)';\n\n        const small = document.createElement('small')\n        small.append(document.createTextNode(\"(click to download)\"))\n        wrapper.append(small)\n        \n        return wrapper\n    }\n}\n\nconst make_download_link = (filename, title, content, type) => {\n    const blob = new Blob(\n        [content],\n        {\n            type: type ?? \"text/plain\"\n        }\n    );\n\n    const link = document.createElement(\"a\")\n    link.target = \"_blank\"\n    link.download = filename\n    link.href = URL.createObjectURL(blob)\n    link.append(document.createTextNode(title))\n\n    return link\n}\n\nObject.keys(types).forEach(key => {\n    const f = types[key];\n    const elements = document.querySelectorAll(\"code.\" + key)\n    elements.forEach(element => {\n        const newElement = f(element)\n        if (typeof newElement === 'string') {\n            element.innerHTML = \"\"\n            element.appendChild(document.createTextNode(newElement))\n            return\n        }\n\n        element.parentNode.replaceChild(newElement, element)\n    })\n})"],"names":["$377ad6cb6486743d$var$types","date","element","Date","innerText","toISOString","path","text","split","length","pathbuilders","window","wrapper","document","createElement","found_one","Object","keys","forEach","name","filename","data","append","$377ad6cb6486743d$var$make_download_link","createTextNode","small","title","content","type","blob","Blob","link","target","download","href","URL","createObjectURL","key","f","querySelectorAll","newElement","innerHTML","appendChild","parentNode","replaceChild"],"version":3,"file":"control.js.map"}